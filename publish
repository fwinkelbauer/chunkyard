#!/bin/bash -eu

announce () {
    echo ''
    echo "$1"
    echo '============================================================'
}

git_describe () {
    tags=$(git tag -l)

    if [ -z "$tags" ]; then
        echo '0.0.0'
        return
    fi

    tag=$(git describe --abbrev=0)
    echo "${tag:1}"
}

script=$(readlink -f "${BASH_SOURCE[0]}")
directory=$(dirname "$script")
cd "$directory"

if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    if ! [ -x "$(command -v dotnet)" ]; then
        announce "Install dependencies"
        sudo apt update
        sudo apt install git dotnet-sdk-8.0 clang zlib1g-dev
    fi

    native=('linux-x64')
    contained=('win-x64')
else
    native=()
    contained=('win-x64' 'linux-x64')
fi

export DOTNET_CLI_TELEMETRY_OPTOUT='1'

solution='src/Chunkyard.sln'
csproj='src/Chunkyard/Chunkyard.csproj'
artifacts='artifacts'
version=$(git_describe)

announce 'Cleanup'
git clean -dfX

announce 'Build'
dotnet format "$solution" --verify-no-changes
dotnet build "$solution" -warnaserror --tl:auto

announce 'Test'
dotnet test "$solution" --no-build

for runtime in "${native[@]}"; do
    announce "Publish $version (native $runtime)"
    dotnet publish "$csproj" -o "$artifacts" -p:Version="$version" -p:ContinuousIntegrationBuild=true --tl:auto -r "$runtime" -p:PublishAot=true -p:StripSymbols=false
done

for runtime in "${contained[@]}"; do
    announce "Publish $version (self-contained $runtime)"
    dotnet publish "$csproj" -o "$artifacts" -p:Version="$version" -p:ContinuousIntegrationBuild=true --tl:auto -r "$runtime" --self-contained -p:PublishSingleFile=true -p:PublishTrimmed=true -p:DebugType=embedded
done

announce "Publish $version (dotnet tools)"
dotnet pack "$csproj" -o "$artifacts" -p:Version="$version" -p:ContinuousIntegrationBuild=true --tl:auto
